@model IEnumerable<FurnitureShop.Areas.Seller.Data.ProductViewModel>

@{
    ViewBag.Title = "Listings";
    Layout = "~/Areas/Seller/Views/Shared/_SellerLayout.cshtml";
}
<style>
    body, html {
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
    }

    .header {
        background-color: #2196F3;
    }

    .logo {
        width: 40px;
        height: 40px;
    }

    .user-icon {
        width: 30px;
        height: 30px;
        border-radius: 50%;
    }

    .stat-box {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .breadcrumb-item {
        color: #2196F3;
        text-decoration: none;
    }

        .breadcrumb-item.active {
            color: #666;
        }

    .table th, .table td {
        text-align: center;
    }

    .btn-seller {
    }

    .add-listing-button {
        background-color: #36a536; /* Bootstrap primary color */
        color: white;
        padding: 7px 14px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        text-align: center;
        display: inline-block;
    }

        .add-listing-button:hover {
            background-color: #2f932f; /* Darker shade for hover */
        }

    th {
        font-weight: lighter;
    }

    .switch-btn {
        cursor: pointer;
    }
</style>


<div class="container-fluid ">

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <span>
                Home
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708" />
                </svg>
            </span>
            <h5>Listing Management</h5>
        </div>

        <div>

            @Html.ActionLink("ADD NEW LISTING", "Create", "Product", null, new { @class = "add-listing-button" })
        </div>

    </div>

    <div class="row mb-3">
        <div class="col-md-2">
            <div class="stat-box text-center py-1">
                <span id="activeProducts">

                </span> Active Listings
            </div>
        </div>

        <div class="col-md-2">
            <div class="stat-box text-center py-1">
                <span id="inActiveProducts">

                </span>
                Inactive Listings
            </div>
        </div>



    </div>



    <div class="row mb-3">
        <div class="col-md-2">
            <label for="category">Category</label>
            <select id="category" class="form-control">
                <option>All</option>
            </select>
        </div>
        <div class="col-md-2">
            <label for="brand">Brand</label>
            <select id="brand" class="form-control">
                <option>All</option>
            </select>
        </div>
        <div class="col-md-2">
            <label for="price-range">Price Range</label>
            <input type="text" id="price-range" class="form-control">
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button class="btn btn-outline-primary mr-2">Apply</button>
            <button class="btn btn-outline-secondary">Reset</button>
        </div>
    </div>

    <table class="table table-bordered" id="productTable">
        <thead>
            <tr>
                <th scope="col"></th>
                <th scope="col">Product Details</th>
                <th scope="col">Listing Price</th>
                <th scope="col">Final Price</th>
                <th scope="col">Stock</th>
                <th scope="col">Status</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody id="dataContainer">
        </tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Craete Inventory</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="m-body">
                <div>
                    <table class="table w-100">
                        <thead>
                            <tr>
                                <th>Store</th>
                                <th>Current Stock</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="abcid">
                            
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        loadProducts();

    });

    function loadProducts() {
    // Clear existing tbody content
    $('#productTable tbody').empty();

    $.ajax({
        url: "@Url.Action("GetProductStatus","Product")",
        type: "GET",
        dataType: "json",
        success:
            function (data) {
            if (data.length > 0) {
                data.forEach(function (product) {
                    var tr = $('<tr>');

                    tr.append('<td></td>');
                    tr.append('<td>' + product.product_name + '</td>');
                    tr.append('<td>' + product.list_price + '</td>');
                    tr.append('<td>' + product.selling_price + '</td>');
                    tr.append('<td>' + product.category_id + '</td>');

                    var switchInput = $('<input>', {
                        class: 'form-check-input switch-btn',
                        type: 'checkbox',
                        id: 'checkboxid_' + product.product_id,
                        checked: product.isActive ? 'checked' : undefined
                    });

                    switchInput.on('change', function () {
                        isActiveSwitch(product.product_id, product.isActive);
                    })
                    var switchDiv = $('<div>', {
                        class: 'form-check form-switch flex-wrap d-flex justify-content-center'
                    }).append(switchInput);

                    var tdSwitch = $('<td>').append(switchDiv);
                    tr.append(tdSwitch);

                    var inventoryAction = $('<button>', {
                        class: 'btn btn-primary',
                        text: 'Inventory',
                        type:'button',
                        'data-bs-toggle': 'modal',
                        'data-bs-target': '#exampleModal'
                    });
                    inventoryAction.on('click', function () {
                        addToInventory(product.product_id);
                    })
                    tr.append(inventoryAction);
                    // Append the row to the tbody
                    $('#productTable tbody').append(tr);
                    loadProductstatus(data)
                });
            }
            else {
                // If no data, display a message in a single table row with colspan
                $('#productTable tbody').append('<tr><td colspan="7" class="text-center">No data to display</td></tr>');
            }
        },
        error: function () {
            console.error('Error occurred while loading products.');
        }
        });
    }
    function loadProductstatus(data) {
        let activeProducts = 0;
        let inActiveProducts = 0;
        data.forEach(function (product) {
            if (product.isActive) {
                activeProducts++;
            } else {
                inActiveProducts++;
            }
        });

        $('#activeProducts').text(activeProducts);
        $('#inActiveProducts').text(inActiveProducts);
    }
    function isActiveSwitch(pId, isActive) {
        $.ajax({
            url: '@Url.Action("UpdateProductStatus","Product")',
            type: 'POST',
            dataType: "json",
            data: { 'pId': pId, 'isActive': isActive },
            success: function (response) {
                loadProducts();
            },
            error: function () {
                console.error('Error occurred while loading products.');
            }
        });
    }
    function addToInventory(pId) {
    $('#abcid').empty();
    $.ajax({
        url: '@Url.Action("AddToInventory", "Stock")',
        type: 'GET',
        dataType: "json",
        data: { 'pId': pId },
        success: function (data) {
            if (data.length > 0) {
                data.forEach(function (storeStock) {
                    var tr = $('<tr>');

                    tr.append('<td>' + storeStock.store_name + '</td>');
                    tr.append('<td>' + storeStock.qty + '</td>');
                    tr.append('<td><button class="btn">' + 'Update' + '</button></td>');

                    // Append the row to the tbody
                    $('#abcid').append(tr);
                });
            } else {
                // If no data, display a message in a single table row with colspan
                $('#productTable tbody').append('<tr><td colspan="3" class="text-center">No data to display</td></tr>');
            }
        },
        error: function () {
            console.error('Error occurred while loading product status.');
        },
        loading:
    });
}

</script>
